/*
 * SelectAlgorithmDialog.java
 *
 * Created on March 9, 2008, 10:47 PM
 */

package com.megaware.multipleencrypter.frames;

import com.megaware.multipleencrypter.methods.GeneralMethods;
import com.megaware.multipleencrypter.methods.SingleEncryptionAlgorithmMethods;
import com.megaware.multipleencrypter.objects.AlgorithmObject;
import java.util.Vector;
import javax.swing.JFrame;

/**
 *
 * @author  sandeep
 */
public class SelectAlgorithmDialog extends javax.swing.JDialog {
    
    /** Creates new form SelectAlgorithmDialog */
    public SelectAlgorithmDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setInitialState();
        getAlgorithms();
    }

    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormcmbAlgorithm.addItem(obj.getAlgname()); Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAlgorithms = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        btnAddToList = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstSelAlgorithms = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        btnDefaultAlgorithm = new javax.swing.JButton();
        btnShowDescription = new javax.swing.JButton();
        btnMoveUp = new javax.swing.JButton();
        btnMoveDown = new javax.swing.JButton();
        btnRemoveFromList = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Algorithm Dialog");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Algorithm Details"));
        jPanel2.setLayout(null);

        jLabel1.setText("Available Algorithms:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 180, 20);

        jScrollPane1.setViewportView(lstAlgorithms);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 45, 250, 150);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(270, 30, 3, 290);

        btnAddToList.setText(">>> Add to list >>>");
        btnAddToList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToListActionPerformed(evt);
            }
        });
        jPanel2.add(btnAddToList);
        btnAddToList.setBounds(10, 200, 250, 23);

        jLabel3.setText("Algorithms Hierarchy List");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(280, 20, 280, 17);

        jScrollPane2.setViewportView(lstSelAlgorithms);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(280, 45, 320, 150);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Algorithm Settings"));
        jPanel3.setLayout(new java.awt.GridLayout(2, 1, 0, 5));

        btnDefaultAlgorithm.setText("Set as default algorithm");
        btnDefaultAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefaultAlgorithmActionPerformed(evt);
            }
        });
        jPanel3.add(btnDefaultAlgorithm);

        btnShowDescription.setText("Show description of algorithm");
        btnShowDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowDescriptionActionPerformed(evt);
            }
        });
        jPanel3.add(btnShowDescription);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(10, 230, 250, 90);

        btnMoveUp.setText("MOVE UP ");
        btnMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveUpActionPerformed(evt);
            }
        });
        jPanel2.add(btnMoveUp);
        btnMoveUp.setBounds(280, 245, 120, 23);

        btnMoveDown.setText("MOVE DOWN");
        btnMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveDownActionPerformed(evt);
            }
        });
        jPanel2.add(btnMoveDown);
        btnMoveDown.setBounds(490, 245, 110, 23);

        btnRemoveFromList.setText("<<< Remove from list <<<");
        btnRemoveFromList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFromListActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemoveFromList);
        btnRemoveFromList.setBounds(280, 200, 320, 23);

        btnHelp.setText("Quick Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });
        jPanel2.add(btnHelp);
        btnHelp.setBounds(280, 280, 320, 23);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 50, 610, 330);

        jPanel5.setBackground(java.awt.Color.orange);
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(" ALGORITHM HIERARCHY DEFENITION DIALOG");
        jPanel5.add(jLabel2, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(10, 10, 610, 40);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(null);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel4.add(btnCancel);
        btnCancel.setBounds(465, 5, 140, 30);

        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });
        jPanel4.add(btnDone);
        btnDone.setBounds(5, 5, 140, 30);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(10, 380, 608, 40);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-627)/2, (screenSize.height-460)/2, 627, 460);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowDescriptionActionPerformed
        this.showAlgroithmDescription();
    }//GEN-LAST:event_btnShowDescriptionActionPerformed

    private void btnDefaultAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefaultAlgorithmActionPerformed
        this.setAsDefaultAlgorithm();
    }//GEN-LAST:event_btnDefaultAlgorithmActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        selalgorithms=null;
        killWindow();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddToListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToListActionPerformed
        addToList();
    }//GEN-LAST:event_btnAddToListActionPerformed

    private void btnRemoveFromListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFromListActionPerformed
        removeFromList();
    }//GEN-LAST:event_btnRemoveFromListActionPerformed

    private void btnMoveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveUpActionPerformed
        moveItemUp();
    }//GEN-LAST:event_btnMoveUpActionPerformed

    private void btnMoveDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveDownActionPerformed
        moveItemDown();
    }//GEN-LAST:event_btnMoveDownActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        getAlgorithmsVector();
        killWindow();
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        QuickHelpViewer viewer=new QuickHelpViewer(new JFrame(),true);
        viewer.setContentFile(new java.io.File(new GeneralMethods().getApplicationPath()+
                "settings/hierarchydefenitiondialoghelp.html"));
        viewer.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnHelpActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SelectAlgorithmDialog dialog = new SelectAlgorithmDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // function to get all the alogrithms in the folder
    protected void getAlgorithms() {
        java.io.File file=new java.io.File(new GeneralMethods().getApplicationPath()+
                "algorithms");
        String files[]=file.list();
        for (int i = 0; i < files.length; i++) {            
            if(files[i].endsWith("ALG")) {
                AlgorithmObject obj=new SingleEncryptionAlgorithmMethods().readAlgorithmObject(
                        new GeneralMethods().getApplicationPath()+"algorithms/"+files[i]);
                lstAlgorithmsModel.addElement(obj.getAlgname());
            }
        }
    }
    
    // function to set the selected algorithm as the default alogrithm
    // ie save the current alogrithm object as the algorithm settings file
    protected void setAsDefaultAlgorithm() {
        AlgorithmObject obj=this.getSelectedAlgorithmObject();        
        new SingleEncryptionAlgorithmMethods().writeAlogrithmSettings(obj, 
                new GeneralMethods().getApplicationPath()+"settings/ALGORITHMSETTINGS.SETTINGS");   
        String msg="Default algorithm :"+obj.getAlgname()+" selected";
        javax.swing.JOptionPane.showMessageDialog(null, msg);
    }
    
    // function to set the algorithms in the dialog to the hierarchy when 
    // editing hierarchy
    public void setEditAlgorithms(Vector algorithmsused) {
        lstSelAlgorithmsModel.removeAllElements();
        for (int i = 0; i < algorithmsused.size(); i++) {
            Object object = algorithmsused.elementAt(i);
            lstSelAlgorithmsModel.addElement(object);
        }

    }
    
    
    // function to show the description of the selected alogrithm
    protected void showAlgroithmDescription() {
        AlgorithmObject obj=this.getSelectedAlgorithmObject();
        AlgorithmDescriptionDialog dialog=new AlgorithmDescriptionDialog(
                new javax.swing.JFrame(),true);
        dialog.setDetails(obj);
    }
    
    // function to return the object of the selected algorithm
    protected AlgorithmObject getSelectedAlgorithmObject() {
        String filename=this.getSelectAlgorithmFileName();
        AlgorithmObject obj=new SingleEncryptionAlgorithmMethods().readAlgorithmObject(
                new GeneralMethods().getApplicationPath()+"algorithms/"+filename);
        return obj;
    }
    
    // function to return the selected algorithms filename
    protected String getSelectAlgorithmFileName() {
         String filename=lstAlgorithms.getSelectedValue().toString().replaceAll(
                " ", "-")+".ALG";
         return filename;
    }
    
    // function called when the algorithm change button is clicked and it returns
    // the selected algorithm
    public Vector showDialog() {
        setModal(true);
        setVisible(true);
        dispose();
        return selalgorithms;
    }
    
    // function to kill the window
    private void killWindow() {
       setVisible(false);
        setModal(false);
    }
    
    // function to set the initial state of window components
    private void setInitialState() {
        lstAlgorithmsModel=new javax.swing.DefaultListModel();
        lstSelAlgorithmsModel=new javax.swing.DefaultListModel();
        lstAlgorithms.setModel(lstAlgorithmsModel);
        lstSelAlgorithms.setModel(lstSelAlgorithmsModel);
    } 
    
    // function to add the algorithm to list
    protected void addToList() {
        int index=lstAlgorithms.getSelectedIndex();
        if(index==-1) return;
        else {
            lstSelAlgorithmsModel.addElement(lstAlgorithms.getSelectedValue());
        }
    }        
    
    // function to remove the element from the list
    protected void removeFromList() {
        int index=lstSelAlgorithms.getSelectedIndex();
        if(index!=-1) {
            lstSelAlgorithmsModel.removeElementAt(index);
        }
    }
    
    // function to move the selected item up 
    protected void moveItemUp() {
        int index=lstSelAlgorithms.getSelectedIndex();
        if(index==0) return;
        if(index!=-1&&index>0) {
            String value=lstSelAlgorithmsModel.getElementAt(index).toString();
            lstSelAlgorithmsModel.removeElementAt(index);            
            lstSelAlgorithmsModel.insertElementAt(value, index-1);
        }
    }
    
    // function to move the selected item down
    protected void moveItemDown() {
        int index=lstSelAlgorithms.getSelectedIndex();        
        if(index==lstSelAlgorithmsModel.getSize()-1) return;
        if(index!=-1&&index<lstSelAlgorithmsModel.getSize()) {
            String value=lstSelAlgorithmsModel.getElementAt(index).toString();
            lstSelAlgorithmsModel.removeElementAt(index);            
            lstSelAlgorithmsModel.insertElementAt(value, index+1);
        }
    }
    
    // function to obtain the selected algorithms as vector
    protected void getAlgorithmsVector() {
        selalgorithms=new Vector();
        for (int i = 0; i < lstSelAlgorithmsModel.getSize(); i++) {
            Object object = (Object) lstSelAlgorithmsModel.elementAt(i);
            selalgorithms.addElement(object);
        }
        if(selalgorithms.size()==0) selalgorithms=null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToList;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDefaultAlgorithm;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnMoveDown;
    private javax.swing.JButton btnMoveUp;
    private javax.swing.JButton btnRemoveFromList;
    private javax.swing.JButton btnShowDescription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lstAlgorithms;
    private javax.swing.JList lstSelAlgorithms;
    // End of variables declaration//GEN-END:variables
    
// lst model for available algorithms
    private javax.swing.DefaultListModel lstAlgorithmsModel;
    
    // lst model for selected algorithms list box
    private javax.swing.DefaultListModel lstSelAlgorithmsModel;
    
    // Vector holding the selected algorithms heirarchy
    private Vector selalgorithms;

   
    
}

